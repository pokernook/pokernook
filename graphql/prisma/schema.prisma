generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  createdAt              DateTime        @default(now())
  discriminator          Int
  email                  String          @unique
  emailVerified          DateTime?
  friendships            Friendship[]
  friendRequestsReceived FriendRequest[] @relation("to")
  friendRequestsSent     FriendRequest[] @relation("from")
  id                     String          @id @default(cuid())
  passwordHash           String
  status                 UserStatus?
  username               String

  @@unique([username, discriminator], name: "Tag")
}

model UserStatus {
  createdAt DateTime @default(now())
  emoji     String?
  id        String   @id @default(cuid())
  message   String?
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model FriendRequest {
  createdAt DateTime            @default(now())
  from      User                @relation("from", fields: [fromId], references: [id])
  fromId    String
  id        String              @id @default(cuid())
  status    FriendRequestStatus @default(PENDING)
  to        User                @relation("to", fields: [toId], references: [id])
  toId      String
  updatedAt DateTime            @updatedAt

  @@unique([fromId, toId])
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  CANCELLED
}

model Friendship {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  users     User[]
}
